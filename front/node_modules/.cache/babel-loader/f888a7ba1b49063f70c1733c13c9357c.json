{"ast":null,"code":"var _jsxFileName = \"/home/carlos/\\xC1rea de trabalho/LISTA-GERSON-2/pasta-final-tecprogI/ex.5.final.poo-produtos/src/componentes/listagens.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // Estilos definidos anteriormente\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  display: \"flex\",\n  minHeight: \"100vh\" // Garante que o container ocupe toda a altura da tela\n\n};\nconst navStyle = {\n  width: \"200px\",\n  // Largura do menu\n  backgroundColor: \"#000000\",\n  padding: \"10px\",\n  height: \"100vh\",\n  // Altura para preencher a tela\n  display: \"flex\",\n  flexDirection: \"column\",\n  // Organizar itens na vertical\n  justifyContent: \"flex-start\",\n  // Alinhar ao topo\n  position: \"fixed\",\n  // Tornar o menu fixo\n  top: \"0\",\n  // Fica no topo da página\n  left: \"0\",\n  // Alinha à esquerda\n  bottom: \"0\" // Faz o menu ocupar toda a altura da tela\n\n};\nconst logoStyle = {\n  fontSize: \"large\",\n  fontFamily: \"Arial, sans-serif\",\n  color: \"#FFFFFF\",\n  marginBottom: \"20px\",\n  // Espaço abaixo da logo\n  textAlign: \"center\"\n};\nconst menuLinksStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  // Itens do menu em coluna\n  gap: \"10px\"\n};\nconst botaoStyle = {\n  padding: \"8px 16px\",\n  fontFamily: \"Arial, sans-serif\",\n  backgroundColor: \"#333333\",\n  color: \"#FFFFFF\",\n  border: \"none\",\n  borderRadius: \"5px\",\n  textAlign: \"center\",\n  cursor: \"pointer\",\n  transition: \"background-color 0.3s ease\",\n  textDecoration: \"none\"\n};\nconst actionButtonStyle = {\n  backgroundColor: \"#000000\",\n  color: \"#FFFFFF\",\n  padding: \"8px 16px\",\n  border: \"none\",\n  cursor: \"pointer\",\n  marginLeft: \"10px\"\n};\nconst cancelButtonStyle = {\n  backgroundColor: \"red\",\n  // Cor vermelha para o botão cancelar\n  color: \"#fff\",\n  padding: \"8px 16px\",\n  border: \"none\",\n  cursor: \"pointer\",\n  marginLeft: \"10px\"\n};\n\nconst Listagem = () => {\n  _s();\n\n  // Estado para armazenar a lista de itens\n  const [items, setItems] = useState([{\n    id: 1,\n    name: \"Item 1\"\n  }, {\n    id: 2,\n    name: \"Item 2\"\n  }]);\n  const [newItemName, setNewItemName] = useState(\"\"); // Função para registrar (adicionar) um novo item\n\n  const handleRegister = () => {\n    const newItem = {\n      id: Date.now(),\n      name: newItemName\n    };\n    setItems([...items, newItem]);\n    setNewItemName(\"\"); // Limpar o campo de nome após adicionar\n  }; // Função para editar um item\n\n\n  const handleEdit = id => {\n    const newName = prompt(\"Digite o novo nome para o item:\");\n\n    if (newName) {\n      setItems(items.map(item => item.id === id ? { ...item,\n        name: newName\n      } : item));\n    }\n  }; // Função para deletar um item\n\n\n  const handleDelete = id => {\n    setItems(items.filter(item => item.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: navStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: logoStyle,\n        children: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: menuLinksStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          style: botaoStyle,\n          children: \"Link 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          style: botaoStyle,\n          children: \"Link 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          style: botaoStyle,\n          children: \"Link 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: \"220px\",\n        padding: \"20px\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Listagem de Itens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newItemName,\n          onChange: e => setNewItemName(e.target.value),\n          placeholder: \"Nome do novo item\",\n          style: {\n            padding: \"8px\",\n            marginBottom: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: actionButtonStyle,\n          onClick: handleRegister,\n          children: \"Registrar Novo Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: actionButtonStyle,\n            onClick: () => handleEdit(item.id),\n            children: \"Editar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: cancelButtonStyle,\n            onClick: () => handleDelete(item.id),\n            children: \"Deletar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Listagem, \"chcXzW/RZBIhhuMATvleBdHnnb8=\");\n\n_c = Listagem;\nexport default Listagem;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listagem\");","map":{"version":3,"sources":["/home/carlos/Área de trabalho/LISTA-GERSON-2/pasta-final-tecprogI/ex.5.final.poo-produtos/src/componentes/listagens.tsx"],"names":["React","useState","containerStyle","display","minHeight","navStyle","width","backgroundColor","padding","height","flexDirection","justifyContent","position","top","left","bottom","logoStyle","fontSize","fontFamily","color","marginBottom","textAlign","menuLinksStyle","gap","botaoStyle","border","borderRadius","cursor","transition","textDecoration","actionButtonStyle","marginLeft","cancelButtonStyle","Listagem","items","setItems","id","name","newItemName","setNewItemName","handleRegister","newItem","Date","now","handleEdit","newName","prompt","map","item","handleDelete","filter","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\n// Estilos definidos anteriormente\nconst containerStyle: React.CSSProperties = {\n  display: \"flex\",\n  minHeight: \"100vh\", // Garante que o container ocupe toda a altura da tela\n};\n\nconst navStyle: React.CSSProperties = {\n  width: \"200px\", // Largura do menu\n  backgroundColor: \"#000000\",\n  padding: \"10px\",\n  height: \"100vh\", // Altura para preencher a tela\n  display: \"flex\",\n  flexDirection: \"column\", // Organizar itens na vertical\n  justifyContent: \"flex-start\", // Alinhar ao topo\n  position: \"fixed\", // Tornar o menu fixo\n  top: \"0\", // Fica no topo da página\n  left: \"0\", // Alinha à esquerda\n  bottom: \"0\", // Faz o menu ocupar toda a altura da tela\n};\n\nconst logoStyle: React.CSSProperties = {\n  fontSize: \"large\",\n  fontFamily: \"Arial, sans-serif\",\n  color: \"#FFFFFF\",\n  marginBottom: \"20px\", // Espaço abaixo da logo\n  textAlign: \"center\",\n};\n\nconst menuLinksStyle: React.CSSProperties = {\n  display: \"flex\",\n  flexDirection: \"column\", // Itens do menu em coluna\n  gap: \"10px\",\n};\n\nconst botaoStyle: React.CSSProperties = {\n  padding: \"8px 16px\",\n  fontFamily: \"Arial, sans-serif\",\n  backgroundColor: \"#333333\",\n  color: \"#FFFFFF\",\n  border: \"none\",\n  borderRadius: \"5px\",\n  textAlign: \"center\",\n  cursor: \"pointer\",\n  transition: \"background-color 0.3s ease\",\n  textDecoration: \"none\",\n};\n\nconst actionButtonStyle: React.CSSProperties = {\n  backgroundColor: \"#000000\",\n  color: \"#FFFFFF\",\n  padding: \"8px 16px\",\n  border: \"none\",\n  cursor: \"pointer\",\n  marginLeft: \"10px\",\n};\n\nconst cancelButtonStyle: React.CSSProperties = {\n  backgroundColor: \"red\", // Cor vermelha para o botão cancelar\n  color: \"#fff\",\n  padding: \"8px 16px\",\n  border: \"none\",\n  cursor: \"pointer\",\n  marginLeft: \"10px\",\n};\n\ninterface Item {\n  id: number;\n  name: string;\n}\n\nconst Listagem: React.FC = () => {\n  // Estado para armazenar a lista de itens\n  const [items, setItems] = useState<Item[]>([\n    { id: 1, name: \"Item 1\" },\n    { id: 2, name: \"Item 2\" },\n  ]);\n  const [newItemName, setNewItemName] = useState(\"\");\n\n  // Função para registrar (adicionar) um novo item\n  const handleRegister = () => {\n    const newItem = { id: Date.now(), name: newItemName };\n    setItems([...items, newItem]);\n    setNewItemName(\"\"); // Limpar o campo de nome após adicionar\n  };\n\n  // Função para editar um item\n  const handleEdit = (id: number) => {\n    const newName = prompt(\"Digite o novo nome para o item:\");\n    if (newName) {\n      setItems(items.map(item => (item.id === id ? { ...item, name: newName } : item)));\n    }\n  };\n\n  // Função para deletar um item\n  const handleDelete = (id: number) => {\n    setItems(items.filter(item => item.id !== id));\n  };\n\n  return (\n    <div style={containerStyle}>\n      {/* Menu lateral */}\n      <div style={navStyle}>\n        <div style={logoStyle}>Logo</div>\n        <div style={menuLinksStyle}>\n          <a href=\"#\" style={botaoStyle}>Link 1</a>\n          <a href=\"#\" style={botaoStyle}>Link 2</a>\n          <a href=\"#\" style={botaoStyle}>Link 3</a>\n        </div>\n      </div>\n\n      {/* Área de conteúdo com listagens */}\n      <div style={{ marginLeft: \"220px\", padding: \"20px\", width: \"100%\" }}>\n        <h1>Listagem de Itens</h1>\n\n        {/* Formulário para adicionar um novo item */}\n        <div>\n          <input\n            type=\"text\"\n            value={newItemName}\n            onChange={(e) => setNewItemName(e.target.value)}\n            placeholder=\"Nome do novo item\"\n            style={{ padding: \"8px\", marginBottom: \"10px\" }}\n          />\n          <button style={actionButtonStyle} onClick={handleRegister}>\n            Registrar Novo Item\n          </button>\n        </div>\n\n        <div>\n          {/* Exemplo de lista com botões de ação */}\n          {items.map(item => (\n            <div key={item.id} style={{ marginBottom: \"10px\" }}>\n              <p>{item.name}</p>\n              <button style={actionButtonStyle} onClick={() => handleEdit(item.id)}>\n                Editar\n              </button>\n              <button style={cancelButtonStyle} onClick={() => handleDelete(item.id)}>\n                Deletar\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Listagem;\n"]},"metadata":{},"sourceType":"module"}