{"ast":null,"code":"var _jsxFileName = \"/home/carlos/\\xC1rea de trabalho/LISTA-GERSON-2/pasta-final-tecprogI/ex.5.final.poo-produtos/src/componentes/listagens.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskForm = _ref => {\n  _s();\n\n  let {\n    taskId,\n    onSubmit\n  } = _ref;\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [status, setStatus] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Se estamos editando uma tarefa, busque os dados da tarefa\n    if (taskId) {\n      setLoading(true);\n      fetch(`/api/tasks/${taskId}`).then(response => response.json()).then(data => {\n        setName(data.name);\n        setDescription(data.description);\n        setStatus(data.status);\n        setLoading(false);\n      }).catch(err => {\n        setError('Erro ao carregar os dados da tarefa.');\n        setLoading(false);\n      });\n    }\n  }, [taskId]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({\n      name,\n      description,\n      status\n    });\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Nome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name\",\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Descri\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"true\",\n            checked: status === true,\n            onChange: () => setStatus(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), \"Completa\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"false\",\n            checked: status === false,\n            onChange: () => setStatus(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), \"Incompleta\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Salvar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskForm, \"1dQHMtTTsHQq7oUknDH+1epYMuw=\");\n\n_c = TaskForm;\nexport default TaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"sources":["/home/carlos/Área de trabalho/LISTA-GERSON-2/pasta-final-tecprogI/ex.5.final.poo-produtos/src/componentes/listagens.tsx"],"names":["React","useState","useEffect","TaskForm","taskId","onSubmit","name","setName","description","setDescription","status","setStatus","loading","setLoading","error","setError","fetch","then","response","json","data","catch","err","handleSubmit","event","preventDefault","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\ninterface TaskFormProps {\n  taskId?: number; // Para editar tarefas, se necessário\n  onSubmit: (taskData: { name: string; description: string; status: boolean }) => void;\n}\n\nconst TaskForm: React.FC<TaskFormProps> = ({ taskId, onSubmit }) => {\n  const [name, setName] = useState<string>('');\n  const [description, setDescription] = useState<string>('');\n  const [status, setStatus] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    // Se estamos editando uma tarefa, busque os dados da tarefa\n    if (taskId) {\n      setLoading(true);\n      fetch(`/api/tasks/${taskId}`)\n        .then((response) => response.json())\n        .then((data) => {\n          setName(data.name);\n          setDescription(data.description);\n          setStatus(data.status);\n          setLoading(false);\n        })\n        .catch((err) => {\n          setError('Erro ao carregar os dados da tarefa.');\n          setLoading(false);\n        });\n    }\n  }, [taskId]);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    onSubmit({ name, description, status });\n  };\n\n  if (loading) {\n    return <div>Carregando...</div>;\n  }\n\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"name\">Nome</label>\n        <input\n          id=\"name\"\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          required\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"description\">Descrição</label>\n        <textarea\n          id=\"description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          required\n        />\n      </div>\n\n      <div>\n        <label>Status</label>\n        <div>\n          <label>\n            <input\n              type=\"radio\"\n              value=\"true\"\n              checked={status === true}\n              onChange={() => setStatus(true)}\n            />\n            Completa\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              value=\"false\"\n              checked={status === false}\n              onChange={() => setStatus(false)}\n            />\n            Incompleta\n          </label>\n        </div>\n      </div>\n\n      <button type=\"submit\">Salvar</button>\n    </form>\n  );\n};\n\nexport default TaskForm;\n"]},"metadata":{},"sourceType":"module"}