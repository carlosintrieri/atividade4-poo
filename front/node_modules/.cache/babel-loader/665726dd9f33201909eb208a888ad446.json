{"ast":null,"code":"var _jsxFileName = \"/home/carlos/\\xC1rea de trabalho/LISTA-GERSON-2/pasta-final-tecprogI/ex.5.final.poo-produtos/src/componentes/cadConsumo.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"materialize-css/dist/css/materialize.min.css\"; // Estilos CSS\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst botaoStyle = {\n  padding: \"10px\",\n  fontFamily: \"arial\",\n  backgroundColor: \"#000\",\n  color: \"#fff\",\n  border: \"none\",\n  cursor: \"pointer\"\n};\n\nconst CadastroProduto = () => {\n  _s();\n\n  const [idProduto, setIdProduto] = useState(\"\");\n  const [nomeProduto, setNomeProduto] = useState(\"\");\n  const [valor, setValor] = useState(\"\");\n\n  const handleCadastro = () => {\n    const novoProduto = {\n      idProduto,\n      nomeProduto,\n      valor\n    }; // Recupera produtos existentes no localStorage ou cria uma lista vazia\n\n    const produtosExistentes = JSON.parse(localStorage.getItem(\"produtos\") || \"[]\"); // Adiciona o novo produto e armazena no localStorage\n\n    produtosExistentes.push(novoProduto);\n    localStorage.setItem(\"produtos\", JSON.stringify(produtosExistentes)); // Limpa os campos\n\n    setIdProduto(\"\");\n    setNomeProduto(\"\");\n    setValor(\"\");\n    alert(\"Produto cadastrado com sucesso!\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"center-align\",\n      children: \"Cadastrar Produto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: idProduto,\n        onChange: e => setIdProduto(e.target.value),\n        placeholder: \"ID do Produto\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: nomeProduto,\n        onChange: e => setNomeProduto(e.target.value),\n        placeholder: \"Nome do Produto\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: valor,\n        onChange: e => setValor(e.target.value),\n        placeholder: \"Valor\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: botaoStyle,\n      onClick: handleCadastro,\n      children: \"Cadastrar Produto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CadastroProduto, \"ar5E8SfaY5PhmnMCE9XZqGxGi9I=\");\n\n_c = CadastroProduto;\nexport default CadastroProduto;\n\nvar _c;\n\n$RefreshReg$(_c, \"CadastroProduto\");","map":{"version":3,"sources":["/home/carlos/Área de trabalho/LISTA-GERSON-2/pasta-final-tecprogI/ex.5.final.poo-produtos/src/componentes/cadConsumo.tsx"],"names":["React","useState","botaoStyle","padding","fontFamily","backgroundColor","color","border","cursor","CadastroProduto","idProduto","setIdProduto","nomeProduto","setNomeProduto","valor","setValor","handleCadastro","novoProduto","produtosExistentes","JSON","parse","localStorage","getItem","push","setItem","stringify","alert","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport CSS from \"csstype\";\nimport \"materialize-css/dist/css/materialize.min.css\";\n\n// Estilos CSS\nconst botaoStyle: CSS.Properties = {\n  padding: \"10px\",\n  fontFamily: \"arial\",\n  backgroundColor: \"#000\",\n  color: \"#fff\",\n  border: \"none\",\n  cursor: \"pointer\",\n};\n\nconst CadastroProduto: React.FC = () => {\n  const [idProduto, setIdProduto] = useState(\"\");\n  const [nomeProduto, setNomeProduto] = useState(\"\");\n  const [valor, setValor] = useState(\"\");\n\n  const handleCadastro = () => {\n    const novoProduto = {\n      idProduto,\n      nomeProduto,\n      valor,\n    };\n\n    // Recupera produtos existentes no localStorage ou cria uma lista vazia\n    const produtosExistentes = JSON.parse(localStorage.getItem(\"produtos\") || \"[]\");\n\n    // Adiciona o novo produto e armazena no localStorage\n    produtosExistentes.push(novoProduto);\n    localStorage.setItem(\"produtos\", JSON.stringify(produtosExistentes));\n\n    // Limpa os campos\n    setIdProduto(\"\");\n    setNomeProduto(\"\");\n    setValor(\"\");\n\n    alert(\"Produto cadastrado com sucesso!\");\n  };\n\n  return (\n    <div className=\"container\">\n      <h4 className=\"center-align\">Cadastrar Produto</h4>\n      <div className=\"input-field\">\n        <input\n          type=\"text\"\n          value={idProduto}\n          onChange={(e) => setIdProduto(e.target.value)}\n          placeholder=\"ID do Produto\"\n          required\n        />\n      </div>\n      <div className=\"input-field\">\n        <input\n          type=\"text\"\n          value={nomeProduto}\n          onChange={(e) => setNomeProduto(e.target.value)}\n          placeholder=\"Nome do Produto\"\n          required\n        />\n      </div>\n      <div className=\"input-field\">\n        <input\n          type=\"text\"\n          value={valor}\n          onChange={(e) => setValor(e.target.value)}\n          placeholder=\"Valor\"\n          required\n        />\n      </div>\n      <button style={botaoStyle} onClick={handleCadastro}>\n        Cadastrar Produto\n      </button>\n    </div>\n  );\n};\n\nexport default CadastroProduto;\n"]},"metadata":{},"sourceType":"module"}