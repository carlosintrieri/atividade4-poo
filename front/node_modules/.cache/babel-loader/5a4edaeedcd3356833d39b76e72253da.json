{"ast":null,"code":"var _jsxFileName = \"/home/carlos/\\xC1rea de trabalho/LISTA-GERSON-2/pasta-final-tecprogI/ex.5.final.poo-produtos/src/componentes/listagens.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Clientes = () => {\n  _s();\n\n  // Estado para armazenar os clientes\n  const [clientes, setClientes] = useState([{\n    id: 1,\n    nome: \"João Silva\",\n    cpf: \"123.456.789-00\",\n    telefone: \"(11)98765-4321\",\n    valorConsumido: 500.00\n  }, {\n    id: 2,\n    nome: \"Maria Oliveira\",\n    cpf: \"234.567.890-11\",\n    telefone: \"(21)98765-4322\",\n    valorConsumido: 150.00\n  }, {\n    id: 3,\n    nome: \"Carlos Souza\",\n    cpf: \"345.678.901-22\",\n    telefone: \"(31)98765-4323\",\n    valorConsumido: 800.00\n  }, {\n    id: 4,\n    nome: \"Ana Costa\",\n    cpf: \"456.789.012-33\",\n    telefone: \"(41)98765-4324\",\n    valorConsumido: 350.00\n  }, {\n    id: 5,\n    nome: \"Ricardo Pereira\",\n    cpf: \"567.890.123-44\",\n    telefone: \"(51)98765-4325\",\n    valorConsumido: 120.00\n  }, {\n    id: 6,\n    nome: \"Juliana Mendes\",\n    cpf: \"678.901.234-55\",\n    telefone: \"(61)98765-4326\",\n    valorConsumido: 900.00\n  }, {\n    id: 7,\n    nome: \"Fernanda Silva\",\n    cpf: \"789.012.345-66\",\n    telefone: \"(71)98765-4327\",\n    valorConsumido: 200.00\n  }, {\n    id: 8,\n    nome: \"Roberto Lima\",\n    cpf: \"890.123.456-77\",\n    telefone: \"(81)98765-4328\",\n    valorConsumido: 1000.00\n  }, {\n    id: 9,\n    nome: \"Luciana Alves\",\n    cpf: \"901.234.567-88\",\n    telefone: \"(91)98765-4329\",\n    valorConsumido: 250.00\n  }, {\n    id: 10,\n    nome: \"Ricardo Barbosa\",\n    cpf: \"012.345.678-99\",\n    telefone: \"(11)98765-4330\",\n    valorConsumido: 450.00\n  }]); // Função para registrar um novo cliente\n\n  const registrarCliente = () => {\n    const novoCliente = {\n      id: clientes.length + 1,\n      // Gerar um ID sequencial\n      nome: \"Novo Cliente\",\n      cpf: \"000.000.000-00\",\n      telefone: \"(00)00000-0000\",\n      valorConsumido: 300.00\n    }; // Adicionar o novo cliente à lista\n\n    setClientes([...clientes, novoCliente]);\n  }; // Função para editar um cliente\n\n\n  const editarCliente = id => {\n    const clienteEditado = clientes.map(cliente => cliente.id === id ? { ...cliente,\n      nome: \"Nome Editado\",\n      valorConsumido: 999.00\n    } // Exemplo de edição\n    : cliente);\n    setClientes(clienteEditado);\n  }; // Função para deletar um cliente\n\n\n  const deletarCliente = id => {\n    const clientesFiltrados = clientes.filter(cliente => cliente.id !== id);\n    setClientes(clientesFiltrados);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"1\",\n    className: \"col s12\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"responsive-table centered\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Id\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Nome\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"CPF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Telefone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Valor Consumido\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"A\\xE7\\xF5es\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: clientes.filter(cliente => cliente.valorConsumido > 300) // Filtrando valores consumidos maiores que 300\n            .sort((a, b) => b.valorConsumido - a.valorConsumido) // Ordenando do maior para o menor consumo\n            .map(cliente => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: cliente.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: cliente.nome\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: cliente.cpf\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: cliente.telefone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"R$ \", cliente.valorConsumido.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn black white-text\",\n                  onClick: () => editarCliente(cliente.id),\n                  children: \"Editar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn black white-text\",\n                  onClick: () => deletarCliente(cliente.id),\n                  children: \"Deletar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this)]\n            }, cliente.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn green\",\n        onClick: registrarCliente,\n        children: \"Registrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Clientes, \"LegWJD81h/lEQ9hZtxfS8QUwDqM=\");\n\n_c = Clientes;\nexport default Clientes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clientes\");","map":{"version":3,"sources":["/home/carlos/Área de trabalho/LISTA-GERSON-2/pasta-final-tecprogI/ex.5.final.poo-produtos/src/componentes/listagens.tsx"],"names":["React","useState","Clientes","clientes","setClientes","id","nome","cpf","telefone","valorConsumido","registrarCliente","novoCliente","length","editarCliente","clienteEditado","map","cliente","deletarCliente","clientesFiltrados","filter","sort","a","b","toFixed"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nconst Clientes = () => {\n  // Estado para armazenar os clientes\n  const [clientes, setClientes] = useState([\n    { id: 1, nome: \"João Silva\", cpf: \"123.456.789-00\", telefone: \"(11)98765-4321\", valorConsumido: 500.00 },\n    { id: 2, nome: \"Maria Oliveira\", cpf: \"234.567.890-11\", telefone: \"(21)98765-4322\", valorConsumido: 150.00 },\n    { id: 3, nome: \"Carlos Souza\", cpf: \"345.678.901-22\", telefone: \"(31)98765-4323\", valorConsumido: 800.00 },\n    { id: 4, nome: \"Ana Costa\", cpf: \"456.789.012-33\", telefone: \"(41)98765-4324\", valorConsumido: 350.00 },\n    { id: 5, nome: \"Ricardo Pereira\", cpf: \"567.890.123-44\", telefone: \"(51)98765-4325\", valorConsumido: 120.00 },\n    { id: 6, nome: \"Juliana Mendes\", cpf: \"678.901.234-55\", telefone: \"(61)98765-4326\", valorConsumido: 900.00 },\n    { id: 7, nome: \"Fernanda Silva\", cpf: \"789.012.345-66\", telefone: \"(71)98765-4327\", valorConsumido: 200.00 },\n    { id: 8, nome: \"Roberto Lima\", cpf: \"890.123.456-77\", telefone: \"(81)98765-4328\", valorConsumido: 1000.00 },\n    { id: 9, nome: \"Luciana Alves\", cpf: \"901.234.567-88\", telefone: \"(91)98765-4329\", valorConsumido: 250.00 },\n    { id: 10, nome: \"Ricardo Barbosa\", cpf: \"012.345.678-99\", telefone: \"(11)98765-4330\", valorConsumido: 450.00 }\n  ]);\n\n  // Função para registrar um novo cliente\n  const registrarCliente = () => {\n    const novoCliente = {\n      id: clientes.length + 1, // Gerar um ID sequencial\n      nome: \"Novo Cliente\",\n      cpf: \"000.000.000-00\",\n      telefone: \"(00)00000-0000\",\n      valorConsumido: 300.00\n    };\n\n    // Adicionar o novo cliente à lista\n    setClientes([...clientes, novoCliente]);\n  };\n\n  // Função para editar um cliente\n  const editarCliente = (id) => {\n    const clienteEditado = clientes.map(cliente =>\n      cliente.id === id\n        ? { ...cliente, nome: \"Nome Editado\", valorConsumido: 999.00 } // Exemplo de edição\n        : cliente\n    );\n    setClientes(clienteEditado);\n  };\n\n  // Função para deletar um cliente\n  const deletarCliente = (id) => {\n    const clientesFiltrados = clientes.filter(cliente => cliente.id !== id);\n    setClientes(clientesFiltrados);\n  };\n\n  return (\n    <div id=\"1\" className=\"col s12\">\n      <form>\n        <div>\n          <table className=\"responsive-table centered\">\n            <thead>\n              <tr>\n                <th>Id</th>\n                <th>Nome</th>\n                <th>CPF</th>\n                <th>Telefone</th>\n                <th>Valor Consumido</th>\n                <th>Ações</th> {/* Coluna de ações */}\n              </tr>\n            </thead>\n            <tbody>\n              {clientes\n                .filter(cliente => cliente.valorConsumido > 300) // Filtrando valores consumidos maiores que 300\n                .sort((a, b) => b.valorConsumido - a.valorConsumido) // Ordenando do maior para o menor consumo\n                .map(cliente => (\n                  <tr key={cliente.id}>\n                    <td>{cliente.id}</td>\n                    <td>{cliente.nome}</td>\n                    <td>{cliente.cpf}</td>\n                    <td>{cliente.telefone}</td>\n                    <td>R$ {cliente.valorConsumido.toFixed(2)}</td>\n                    <td>\n                      {/* Botões de Edição e Deleção */}\n                      <button\n                        type=\"button\"\n                        className=\"btn black white-text\"\n                        onClick={() => editarCliente(cliente.id)}\n                      >\n                        Editar\n                      </button>\n                      <button\n                        type=\"button\"\n                        className=\"btn black white-text\"\n                        onClick={() => deletarCliente(cliente.id)}\n                      >\n                        Deletar\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        </div>\n      </form>\n\n      {/* Botão Registrar */}\n      <div className=\"center\">\n        <button\n          className=\"btn green\"\n          onClick={registrarCliente}\n        >\n          Registrar\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Clientes;\n"]},"metadata":{},"sourceType":"module"}