{"ast":null,"code":"var _jsxFileName = \"/home/carlos/\\xC1rea de trabalho/LISTA-GERSON-2/pasta-final-tecprogI/ex.5.final.poo-produtos/src/componentes/listagens.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Listagens = () => {\n  _s();\n\n  const [clientes, setClientes] = useState([{\n    id: 1,\n    nome: \"João Silva\",\n    cpf: \"123.456.789-00\",\n    telefone: \"(11)98765-4321\",\n    valorConsumido: 500.00\n  }, {\n    id: 2,\n    nome: \"Maria Oliveira\",\n    cpf: \"234.567.890-11\",\n    telefone: \"(21)98765-4322\",\n    valorConsumido: 150.00\n  }, {\n    id: 3,\n    nome: \"Carlos Souza\",\n    cpf: \"345.678.901-22\",\n    telefone: \"(31)98765-4323\",\n    valorConsumido: 800.00\n  }, {\n    id: 4,\n    nome: \"Ana Costa\",\n    cpf: \"456.789.012-33\",\n    telefone: \"(41)98765-4324\",\n    valorConsumido: 350.00\n  }, {\n    id: 5,\n    nome: \"Ricardo Pereira\",\n    cpf: \"567.890.123-44\",\n    telefone: \"(51)98765-4325\",\n    valorConsumido: 120.00\n  }, {\n    id: 6,\n    nome: \"Juliana Mendes\",\n    cpf: \"678.901.234-55\",\n    telefone: \"(61)98765-4326\",\n    valorConsumido: 900.00\n  }, {\n    id: 7,\n    nome: \"Fernanda Silva\",\n    cpf: \"789.012.345-66\",\n    telefone: \"(71)98765-4327\",\n    valorConsumido: 200.00\n  }, {\n    id: 8,\n    nome: \"Roberto Lima\",\n    cpf: \"890.123.456-77\",\n    telefone: \"(81)98765-4328\",\n    valorConsumido: 1000.00\n  }, {\n    id: 9,\n    nome: \"Luciana Alves\",\n    cpf: \"901.234.567-88\",\n    telefone: \"(91)98765-4329\",\n    valorConsumido: 250.00\n  }, {\n    id: 10,\n    nome: \"Ricardo Barbosa\",\n    cpf: \"012.345.678-99\",\n    telefone: \"(11)98765-4330\",\n    valorConsumido: 450.00\n  }]); // Função para reordenar os clientes conforme o valor consumido\n\n  const sortClientes = () => {\n    const sortedClientes = [...clientes].sort((a, b) => b.valorConsumido - a.valorConsumido);\n    setClientes(sortedClientes);\n  }; // Função de editar o valor consumido\n\n\n  const editarCliente = (id, novoValor) => {\n    const updatedClientes = clientes.map(cliente => {\n      if (cliente.id === id) {\n        cliente.valorConsumido = novoValor;\n      }\n\n      return cliente;\n    });\n    setClientes(updatedClientes);\n    sortClientes(); // Reordena após edição\n  }; // Função de deletar o cliente\n\n\n  const deletarCliente = id => {\n    const updatedClientes = clientes.filter(cliente => cliente.id !== id);\n    setClientes(updatedClientes);\n    sortClientes(); // Reordena após deleção\n  }; // Função de adicionar um novo cliente\n\n\n  const registrarCliente = () => {\n    const novoCliente = {\n      id: clientes.length + 1,\n      nome: \"Novo Cliente\",\n      cpf: \"000.000.000-00\",\n      telefone: \"(00)00000-0000\",\n      valorConsumido: 0.00\n    };\n    setClientes([...clientes, novoCliente]);\n    sortClientes(); // Reordena após adição\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col s12\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"tabs\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"tab col s3\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#1\",\n              children: \"Cliente Consumo Valor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"1\",\n        className: \"col s12\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"responsive-table centered\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Id\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Nome\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"CPF\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Telefone\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Valor Consumido\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"A\\xE7\\xF5es\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 21\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: clientes.map(cliente => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: cliente.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: cliente.nome\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: cliente.cpf\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: cliente.telefone\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [\"R$ \", cliente.valorConsumido.toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"btn waves-effect waves-light blue\",\n                      onClick: () => editarCliente(cliente.id, cliente.valorConsumido + 50) // Exemplo de edição\n                      ,\n                      children: \"Editar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"btn waves-effect waves-light red\",\n                      onClick: () => deletarCliente(cliente.id),\n                      children: \"Deletar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 23\n                  }, this)]\n                }, cliente.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn waves-effect waves-light green\",\n              onClick: registrarCliente,\n              children: \"Registrar Novo Cliente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Listagens, \"LegWJD81h/lEQ9hZtxfS8QUwDqM=\");\n\n_c = Listagens;\nexport default Listagens;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listagens\");","map":{"version":3,"sources":["/home/carlos/Área de trabalho/LISTA-GERSON-2/pasta-final-tecprogI/ex.5.final.poo-produtos/src/componentes/listagens.tsx"],"names":["useState","Listagens","clientes","setClientes","id","nome","cpf","telefone","valorConsumido","sortClientes","sortedClientes","sort","a","b","editarCliente","novoValor","updatedClientes","map","cliente","deletarCliente","filter","registrarCliente","novoCliente","length","toFixed"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport M from \"materialize-css\";\n\nconst Listagens = () => {\n  const [clientes, setClientes] = useState([\n    { id: 1, nome: \"João Silva\", cpf: \"123.456.789-00\", telefone: \"(11)98765-4321\", valorConsumido: 500.00 },\n    { id: 2, nome: \"Maria Oliveira\", cpf: \"234.567.890-11\", telefone: \"(21)98765-4322\", valorConsumido: 150.00 },\n    { id: 3, nome: \"Carlos Souza\", cpf: \"345.678.901-22\", telefone: \"(31)98765-4323\", valorConsumido: 800.00 },\n    { id: 4, nome: \"Ana Costa\", cpf: \"456.789.012-33\", telefone: \"(41)98765-4324\", valorConsumido: 350.00 },\n    { id: 5, nome: \"Ricardo Pereira\", cpf: \"567.890.123-44\", telefone: \"(51)98765-4325\", valorConsumido: 120.00 },\n    { id: 6, nome: \"Juliana Mendes\", cpf: \"678.901.234-55\", telefone: \"(61)98765-4326\", valorConsumido: 900.00 },\n    { id: 7, nome: \"Fernanda Silva\", cpf: \"789.012.345-66\", telefone: \"(71)98765-4327\", valorConsumido: 200.00 },\n    { id: 8, nome: \"Roberto Lima\", cpf: \"890.123.456-77\", telefone: \"(81)98765-4328\", valorConsumido: 1000.00 },\n    { id: 9, nome: \"Luciana Alves\", cpf: \"901.234.567-88\", telefone: \"(91)98765-4329\", valorConsumido: 250.00 },\n    { id: 10, nome: \"Ricardo Barbosa\", cpf: \"012.345.678-99\", telefone: \"(11)98765-4330\", valorConsumido: 450.00 }\n  ]);\n\n  // Função para reordenar os clientes conforme o valor consumido\n  const sortClientes = () => {\n    const sortedClientes = [...clientes].sort((a, b) => b.valorConsumido - a.valorConsumido);\n    setClientes(sortedClientes);\n  };\n\n  // Função de editar o valor consumido\n  const editarCliente = (id, novoValor) => {\n    const updatedClientes = clientes.map(cliente => {\n      if (cliente.id === id) {\n        cliente.valorConsumido = novoValor;\n      }\n      return cliente;\n    });\n    setClientes(updatedClientes);\n    sortClientes(); // Reordena após edição\n  };\n\n  // Função de deletar o cliente\n  const deletarCliente = (id) => {\n    const updatedClientes = clientes.filter(cliente => cliente.id !== id);\n    setClientes(updatedClientes);\n    sortClientes(); // Reordena após deleção\n  };\n\n  // Função de adicionar um novo cliente\n  const registrarCliente = () => {\n    const novoCliente = {\n      id: clientes.length + 1,\n      nome: \"Novo Cliente\",\n      cpf: \"000.000.000-00\",\n      telefone: \"(00)00000-0000\",\n      valorConsumido: 0.00\n    };\n    setClientes([...clientes, novoCliente]);\n    sortClientes(); // Reordena após adição\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col s12\">\n          <ul className=\"tabs\">\n            <li className=\"tab col s3\"><a href=\"#1\">Cliente Consumo Valor</a></li>\n          </ul>\n        </div>\n        <div id=\"1\" className=\"col s12\">\n          <form>\n            <div>\n              <table className=\"responsive-table centered\">\n                <thead>\n                  <tr>\n                    <th>Id</th>\n                    <th>Nome</th>\n                    <th>CPF</th>\n                    <th>Telefone</th>\n                    <th>Valor Consumido</th>\n                    <th>Ações</th> {/* Título para a coluna de ações */}\n                  </tr>\n                </thead>\n                <tbody>\n                  {clientes.map(cliente => (\n                    <tr key={cliente.id}>\n                      <td>{cliente.id}</td>\n                      <td>{cliente.nome}</td>\n                      <td>{cliente.cpf}</td>\n                      <td>{cliente.telefone}</td>\n                      <td>R$ {cliente.valorConsumido.toFixed(2)}</td>\n                      <td>\n                        <button\n                          type=\"button\"\n                          className=\"btn waves-effect waves-light blue\"\n                          onClick={() => editarCliente(cliente.id, cliente.valorConsumido + 50)} // Exemplo de edição\n                        >\n                          Editar\n                        </button>\n                        <button\n                          type=\"button\"\n                          className=\"btn waves-effect waves-light red\"\n                          onClick={() => deletarCliente(cliente.id)}\n                        >\n                          Deletar\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <button\n                type=\"button\"\n                className=\"btn waves-effect waves-light green\"\n                onClick={registrarCliente}\n              >\n                Registrar Novo Cliente\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Listagens;\n"]},"metadata":{},"sourceType":"module"}